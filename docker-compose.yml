# Because some of our docker-containers have shared libraries, we need to specify
# the build context when creating. Although running from docker-compose doesn't work
# it is still a convenient way to build our containers in the correct contexts

# ~~ DOCKER COMPOSE BUILDER CONTAINER ~~

version: "3.7"
services:
  rest:
    build:
      context: .
      dockerfile: rest-api/Dockerfile
    image: gcr.io/vault-159468/rest:0.1.28
  neo4j:
    build:
      context: neo4j
      dockerfile: Dockerfile
    image: gcr.io/vault-159468/neo4j:0.1.2
  web:
    build:
      context: web-app
      dockerfile: Dockerfile
    image: gcr.io/vault-159468/web-app:0.1.41
  oidc-proxy:
    build:
      context: oidc-proxy
      dockerfile: Dockerfile
    image: gcr.io/vault-159468/oidc-proxy:0.1.24
  admin:
    build:
      context: .
      dockerfile: admin-dashboard/Dockerfile
    image: gcr.io/vault-159468/admin-dashboard:0.1.36
  rabbitmq:
    build:
      context: rabbitmq
      dockerfile: Dockerfile
    image: gcr.io/vault-159468/rabbitmq:0.1.8
  celery:
    build:
      context: .
      dockerfile: celery/Dockerfile
    image: gcr.io/vault-159468/celery:0.1.32