try{Sentry.init({dsn:"https://2791e86b0cbf4da48c0c1718cc3bd9f0@o593264.ingest.sentry.io/5741610",integrations:[new Sentry.Integrations.BrowserTracing],release:"mt-web-1",tracesSampleRate:1})}catch{console.log("couldn't initialize sentry")}var auth0=null;var initializing=false;const isToday=someDate=>{const today=new Date;return someDate.getDate()==today.getDate()&&someDate.getMonth()==today.getMonth()&&someDate.getFullYear()==today.getFullYear()};const configureClient=async()=>{initializing=true;auth0=await createAuth0Client({domain:"login.marintracingapp.org",client_id:"rWrCmqGLtWscSLirUNufXW8p63R7xyCj",scope:"openid profile email",audience:"tracing-rest-api",useRefreshTokens:true}).catch(function(error){alert("Couldn't initialize authentication");console.log(error);window.location="index.html"});initializing=false};if("serviceWorker"in navigator){window.addEventListener("load",function(){navigator.serviceWorker.register("service-worker.js").then(function(registration){console.log("ServiceWorker registration successful with scope: ",registration.scope)},function(err){console.log("ServiceWorker registration failed: ",err)})})}var firebaseConfig={apiKey:"AIzaSyAb7kW9g741aeWlVXoaTaAGZvyHQe55J6Q",authDomain:"marintrace-7c31a.firebaseapp.com",databaseURL:"https://marintrace-7c31a.firebaseio.com",projectId:"marintrace-7c31a",storageBucket:"marintrace-7c31a.appspot.com",messagingSenderId:"932772973963",appId:"1:932772973963:web:90dd713cc42c2a4c2c738e",measurementId:"G-RQSKEVJ22B"};try{firebase.initializeApp(firebaseConfig);firebase.analytics()}catch{console.log("couldn't initalize firebase")}async function createHTTPClientInstance(){if(authToken==null){alert("Couldn't verify authentication status. Please log in again.");document.location.href="/index.html"}else{return axios.create({baseURL:"https://api.marintracingapp.org",headers:{"Content-type":"application/json",Authorization:"Bearer "+authToken},timeout:1e3*10})}}async function reportTest(testType){const instance=await createHTTPClientInstance();await instance.post("/report-health",{test_type:testType}).then(function(response){$("#positiveModal").modal("hide");$("#negativeModal").modal("hide");alert("Successfully reported test result.")}).catch(function(error){alert("Couldn't report test result. Make sure you're connected to internet and log out and log in again. If the error persists please contact us. "+error);console.log(error)})}async function getContacts(){if(localStorage.getItem("users")==null){const t=await createHTTPClientInstance();await t.get("/list/users").then(function(t){console.log("Cache not found... building");localStorage.setItem("users",JSON.stringify(t.data.users))}).catch(function(t){alert("Couldn't get list of potential contacts. Make sure you're connected to internet and log out and log in again. If the error persists please contact us. "+t),console.log(t)})}else{console.log("Using Cache...")}}async function reportContacts(targets){const instance=await createHTTPClientInstance();await instance.post("/report-interaction",{targets:targets}).then(function(response){$("#contactsModal").modal("hide");alert("Successfully reported interactions.")}).catch(function(error){alert("Couldn't report contacts. Make sure you're connected to internet and log out and log in again. If the error persists please contact us. "+error);console.log(error)})}async function reportSymptoms(object){const instance=await createHTTPClientInstance();instance.data=object;await instance.post("/report-health",object).then(function(response){$("#symptomsModal").modal("hide");alert("Successfully reported symptoms.");const now=new Date;localStorage.setItem("lastReport",now)}).catch(function(error){alert("Couldn't report symptoms. Make sure you're connected to internet and log out and log in again. If the error persists please contact us. "+error);console.log(error)})}function markUserAsActive(){return new Promise(async(resolve,reject)=>{const instance=await createHTTPClientInstance();await instance.post("/set-active-user").then(function(response){resolve()}).catch(function(error){reject()})})}async function getUserStatus(callback){const instance=await createHTTPClientInstance();await instance.get("/get-user-entry").then(function(response){callback(response.data)}).catch(function(error){alert("Couldn't get your status. Make sure you're connected to internet and log out and log in again. If the error persists please contact us. "+error);document.location.href="/home.html"})}"use strict";var Layout=function(){function pinSidenav(){$(".sidenav-toggler").addClass("active");$(".sidenav-toggler").data("action","sidenav-unpin");$("body").removeClass("g-sidenav-hidden").addClass("g-sidenav-show g-sidenav-pinned");$("body").append('<div class="backdrop d-xl-none" data-action="sidenav-unpin" data-target='+$("#sidenav-main").data("target")+" />");Cookies.set("sidenav-state","pinned")}function unpinSidenav(){$(".sidenav-toggler").removeClass("active");$(".sidenav-toggler").data("action","sidenav-pin");$("body").removeClass("g-sidenav-pinned").addClass("g-sidenav-hidden");$("body").find(".backdrop").remove();Cookies.set("sidenav-state","unpinned")}if($(window).width()<1200){$("body").removeClass("g-sidenav-hide").addClass("g-sidenav-hidden");$("body").removeClass("g-sidenav-show");$(window).resize(function(){if($("body").hasClass("g-sidenav-show")&&!$("body").hasClass("g-sidenav-pinned")){$("body").removeClass("g-sidenav-show").addClass("g-sidenav-hidden")}})}$("body").on("click","[data-action]",function(e){e.preventDefault();var $this=$(this);var action=$this.data("action");var target=$this.data("target");switch(action){case"sidenav-pin":pinSidenav();break;case"sidenav-unpin":unpinSidenav();break;case"search-show":target=$this.data("target");$("body").removeClass("g-navbar-search-show").addClass("g-navbar-search-showing");setTimeout(function(){$("body").removeClass("g-navbar-search-showing").addClass("g-navbar-search-show")},150);setTimeout(function(){$("body").addClass("g-navbar-search-shown")},300);break;case"search-close":target=$this.data("target");$("body").removeClass("g-navbar-search-shown");setTimeout(function(){$("body").removeClass("g-navbar-search-show").addClass("g-navbar-search-hiding")},150);setTimeout(function(){$("body").removeClass("g-navbar-search-hiding").addClass("g-navbar-search-hidden")},300);setTimeout(function(){$("body").removeClass("g-navbar-search-hidden")},500);break}});$(".sidenav").on("mouseenter",function(){if(!$("body").hasClass("g-sidenav-pinned")){$("body").removeClass("g-sidenav-hide").removeClass("g-sidenav-hidden").addClass("g-sidenav-show")}});$(".sidenav").on("mouseleave",function(){if(!$("body").hasClass("g-sidenav-pinned")){$("body").removeClass("g-sidenav-show").addClass("g-sidenav-hide");setTimeout(function(){$("body").removeClass("g-sidenav-hide").addClass("g-sidenav-hidden")},300)}});$(window).on("load resize",function(){if($("body").height()<800){$("body").css("min-height","100vh");$("#footer-main").addClass("footer-auto-bottom")}})}();"use strict";var CopyIcon=function(){var $element=".btn-icon-clipboard",$btn=$($element);function init($this){$this.tooltip().on("mouseleave",function(){$this.tooltip("hide")});var clipboard=new ClipboardJS($element);clipboard.on("success",function(e){$(e.trigger).attr("title","Copied!").tooltip("_fixTitle").tooltip("show").attr("title","Copy to clipboard").tooltip("_fixTitle");e.clearSelection()})}if($btn.length){init($btn)}}();"use strict";var Navbar=function(){var $nav=$(".navbar-nav, .navbar-nav .nav");var $collapse=$(".navbar .collapse");var $dropdown=$(".navbar .dropdown");function accordion($this){$this.closest($nav).find($collapse).not($this).collapse("hide")}function closeDropdown($this){var $dropdownMenu=$this.find(".dropdown-menu");$dropdownMenu.addClass("close");setTimeout(function(){$dropdownMenu.removeClass("close")},200)}$collapse.on({"show.bs.collapse":function(){accordion($(this))}});$dropdown.on({"hide.bs.dropdown":function(){closeDropdown($(this))}})}();var NavbarCollapse=function(){var $nav=$(".navbar-nav"),$collapse=$(".navbar .navbar-custom-collapse");function hideNavbarCollapse($this){$this.addClass("collapsing-out")}function hiddenNavbarCollapse($this){$this.removeClass("collapsing-out")}if($collapse.length){$collapse.on({"hide.bs.collapse":function(){hideNavbarCollapse($collapse)}});$collapse.on({"hidden.bs.collapse":function(){hiddenNavbarCollapse($collapse)}})}var navbar_menu_visible=0;$(".sidenav-toggler").click(function(){if(navbar_menu_visible==1){$("body").removeClass("nav-open");navbar_menu_visible=0;$(".bodyClick").remove()}else{var div='<div class="bodyClick"></div>';$(div).appendTo("body").click(function(){$("body").removeClass("nav-open");navbar_menu_visible=0;$(".bodyClick").remove()});$("body").addClass("nav-open");navbar_menu_visible=1}})}();"use strict";var Popover=function(){var $popover=$('[data-toggle="popover"]'),$popoverClass="";function init($this){if($this.data("color")){$popoverClass="popover-"+$this.data("color")}var options={trigger:"focus",template:'<div class="popover '+$popoverClass+'" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'};$this.popover(options)}if($popover.length){$popover.each(function(){init($(this))})}}();"use strict";var ScrollTo=function(){var $scrollTo=$(".scroll-me, [data-scroll-to], .toc-entry a");function scrollTo($this){var $el=$this.attr("href");var offset=$this.data("scroll-to-offset")?$this.data("scroll-to-offset"):0;var options={scrollTop:$($el).offset().top-offset};$("html, body").stop(true,true).animate(options,600);event.preventDefault()}if($scrollTo.length){$scrollTo.on("click",function(event){scrollTo($(this))})}}();"use strict";var Tooltip=function(){var $tooltip=$('[data-toggle="tooltip"]');function init(){$tooltip.tooltip()}if($tooltip.length){init()}}();"use strict";var FormControl=function(){var $input=$(".form-control");function init($this){$this.on("focus blur",function(e){$(this).parents(".form-group").toggleClass("focused",e.type==="focus")}).trigger("blur")}if($input.length){init($input)}}();"use strict";var noUiSlider=function(){if($(".input-slider-container")[0]){$(".input-slider-container").each(function(){var slider=$(this).find(".input-slider");var sliderId=slider.attr("id");var minValue=slider.data("range-value-min");var maxValue=slider.data("range-value-max");var sliderValue=$(this).find(".range-slider-value");var sliderValueId=sliderValue.attr("id");var startValue=sliderValue.data("range-value-low");var c=document.getElementById(sliderId),d=document.getElementById(sliderValueId);noUiSlider.create(c,{start:[parseInt(startValue)],connect:[true,false],range:{min:[parseInt(minValue)],max:[parseInt(maxValue)]}});c.noUiSlider.on("update",function(a,b){d.textContent=a[b]})})}if($("#input-slider-range")[0]){var c=document.getElementById("input-slider-range"),d=document.getElementById("input-slider-range-value-low"),e=document.getElementById("input-slider-range-value-high"),f=[d,e];noUiSlider.create(c,{start:[parseInt(d.getAttribute("data-range-value-low")),parseInt(e.getAttribute("data-range-value-high"))],connect:!0,range:{min:parseInt(c.getAttribute("data-range-value-min")),max:parseInt(c.getAttribute("data-range-value-max"))}}),c.noUiSlider.on("update",function(a,b){f[b].textContent=a[b]})}}();"use strict";var Scrollbar=function(){var $scrollbar=$(".scrollbar-inner");function init(){$scrollbar.scrollbar().scrollLock()}if($scrollbar.length){init()}}();