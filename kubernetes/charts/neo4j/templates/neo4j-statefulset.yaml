apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  name:  {{ template "neo4j.fullname" . }}
  labels:
    name: {{ template "neo4j.fullname" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
spec:
  replicas: 1 # cannot be > 1 because of lack of ReadWriteMany support on GKE
  serviceName: {{ template "neo4j.fullname" . }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: {{ template "neo4j.fullname" . }}
  template:
    metadata:
      labels:
        name: {{ template "neo4j.fullname" . }}
    spec:
      securityContext:
        fsGroup: 2000
      initContainers:
        - name: wait-for-vault-service
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-vault; do sleep 1.5; echo "Waiting for Vault to start..."; done']
        - name: make-volume-mounts-writeable
          image: busybox
          command: ['/bin/chmod', '-R', '755', '/data', '/conf']
          volumeMounts:
            - name: {{ template "neo4j.fullname" . }}-claim0
              mountPath: /conf
            - name: {{ template "neo4j.fullname" . }}-claim1
              mountPath: /data
      containers:
        - env:
            - name: VAULT_ADDRESS
              value: https://{{ .Release.Name }}-vault
            - name: VAULT_ROLE
              value: {{ .Values.vault.vaultRole }}
            - name: NEO4J_EDITION
              value: "4.1"
            - name: NEO4J_dbms.memory.heap.initial_size
              value: 1G
            - name: NEO4J_dbms_memory_heap_max__size
              value: 2G
            - name: NEO4J_dbms_memory_pagecache_size
              value: 2G
            - name: NEO4J_bolt_ssl__policy
              value: default
            - name: NEO4J_https_ssl__policy
              value: default
            - name: NEO4J_dbms_connector_bolt_tls__level
              value: REQUIRED
            - name: NEO4J_dbms_ssl_policy_default_base__directory
              value: "/var/lib/neo4j/certificates/https"
            - name: NEO4J_dbms_ssl_policy_default_trust__all
              value: "false"
            - name: NEO4J_dbms_connector_https_enabled
              value: "true"
            - name: NEO4J_dbms_connector_http_enabled
              value: "false"
            - name: NEO4J_dbms_connector_bolt_enabled
              value: "true"
          image: {{ .Values.imageName }}:{{ .Values.imageVersion }}
          {{ if eq .Values.resourceRequests.enabled "true" }}
          resources:
            requests:
              memory: {{ .Values.resourceRequests.memory }}
              cpu: {{ .Values.resourceRequests.cpu }}
          {{ end }}
          imagePullPolicy: ""
          name: {{ template "neo4j.fullname" . }}
          volumeMounts:
            - mountPath: /conf
              name: {{ template "neo4j.fullname" . }}-claim0
            - mountPath: /data
              name: {{ template "neo4j.fullname" . }}-claim1
            - mountPath: /var/run/ssl
              name: {{ template "neo4j.fullname" . }}-tls
              readOnly: true
          ports:
            - containerPort: 7687
              name: bolt
            - containerPort: 7473
              name: https
          {{ if eq .Values.readinessProbe.enabled "true" }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - curl -i http://localhost:7474/db/data 2>&1 | grep -e '200 OK'
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelay }}
            periodSeconds: {{ .Values.readinessProbe.interval}}
          {{ end }}
          {{ if eq .Values.livenessProbe.enabled "true" }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - curl -i http://localhost:7474/db/data 2>&1 | grep -e '200 OK'
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelay }}
            periodSeconds: {{ .Values.livenessProbe.interval }}
          {{ end }}
      imagePullSecrets:
        - name: gcp-registry
      restartPolicy: Always
      serviceAccountName: {{ template "neo4j.fullname" . }}-serviceaccount
      volumes:
          - name: {{ template "neo4j.fullname" . }}-claim0
            persistentVolumeClaim:
              claimName: {{ template "neo4j.fullname" . }}-claim0
          - name: {{ template "neo4j.fullname" . }}-claim1
            persistentVolumeClaim:
              claimName: {{ template "neo4j.fullname" . }}-claim1
          - name: {{ template "neo4j.fullname" . }}-tls
            secret:
              secretName: {{ template "neo4j.fullname" . }}-tls