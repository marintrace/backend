global:
  tlsDisable: false

# Celery High Priority Asynchronous Worker [INTERNAL]
priority-worker:
  replicas: 2
  exposePort: 5555
  imageVersion: 0.0.18
  autoscaling:
    enabled: "true"
    maxReplicas: 3
  vault:
    vaultRole: priority-worker
  readinessProbe:
    enabled: "true"
    initialDelay: 5
    interval: 5
  livenessProbe:
    enabled: "true"
    initialDelay: 5
    interval: 5

# Celery Default Priority Asynchronous Worker [INTERNAL]
worker:
  replicas: 1
  exposePort: 5555
  imageVersion: 0.0.18
  autoscaling:
    enabled: "true"
    maxReplicas: 3
  vault:
    vaultRole: worker
  readinessProbe:
    enabled: "false"
    initialDelay: 5
    interval: 5
  livenessProbe:
    enabled: "false"
    initialDelay: 5
    interval: 5

# Celery Asynchronous Processor Monitoring Service [INTERNAL]
flower:
  replicas: 1
  exposePort: 5555
  imageVersion: 0.0.18
  vault:
    vaultRole: flower
  readinessProbe:
    enabled: "true"
    initialDelay: 5
    interval: 20
  livenessProbe:
    enabled: "true"
    initialDelay: 5
    interval: 30

# Graph Database for application storage [INTERNAL]
neo4j:
  exposePort: 7687
  configStorage: 100Mi
  dataStorage: 75Gi
  imageVersion: 0.0.8
  vault:
    vaultRole: neo4j
  readinessProbe:
    enabled: "true"
    initialDelay: 10
    interval: 8
  livenessProbe:
    enabled: "true"
    initialDelay: 10
    interval: 8

# Message Queue for Celery Processing [INTERNAL]
redis:
  replicas: 1
  exposePort: 6379
  storage: 750Mi
  # Check whether redis is ready to accept requests
  readinessProbe:
    enabled: "true"
    initialDelay: 2
    interval: 5
  # Check whether redis is online
  livenessProbe:
    enabled: "true"
    initialDelay: 2
    interval: 5

# Highly Encrypted Storage of App Secrets [INTERNAL]
vault:
  vault:
    # Disable Vault Agent Sidecar Injection
    injector:
      enabled: false
    server:
      extraEnvironmentVars:
        GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/vault-gcp-auth/service_account.json
      # Mounted Volumes
      extraVolumes:
        - type: secret
          name: vault-gcp-auth
          path: "/vault/userconfig"
        - type: secret
          name: vault-tls
          path: "/etc/tls"
      authDelegator:
        enabled: true
      # Running Vault in High Availability Mode, with GCP as Backend
      ha:
        enabled: true
        config: |
          ui = true
          listener "tcp" {
            tls_disable = 0
            tls_cert_file = "/etc/tls/vault-tls/vault.pem"
            tls_key_file = "/etc/tls/vault-tls/vault-key.pem"
            tls_client_ca_file =  "/etc/tls/vault-tls/ca.pem"
            tls_min_version = "tls12"
            address = "[::]:8200"
            cluster_address = "[::]:8201"
          }
          storage "gcs" {
            bucket     = "vault-159468-data-storage"
            ha_enabled = "true"
          }
          seal "gcpckms" {
            project     = "vault-159468"
            region      = "global"
            key_ring    = "vault"
            crypto_key  = "vault-init"
          }
